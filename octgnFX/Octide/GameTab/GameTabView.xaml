<!--
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0. If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.s
-->
<UserControl x:Class="Octide.Views.GameTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:metro="http://schemas.codeplex.com/elysium"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:local="clr-namespace:Octide"
             xmlns:gong="urn:gong-wpf-dragdrop"
             mc:Ignorable="d" 
             d:DesignHeight="900" d:DesignWidth="600"
             xmlns:params="http://schemas.codeplex.com/elysium/params"
             params:Design.Theme="Dark"
             DataContext="{Binding GameTabViewModel, Source={StaticResource Locator}}">
    <UserControl.Resources>
        <DataTemplate x:Key="FontControl" >
            <Grid Style="{StaticResource OctideInputPanel}" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button Grid.RowSpan="2" Style="{StaticResource XButton}" Margin="5" Command="{Binding RemoveFontCommand}" Visibility="{Binding FontControlVisibility}" />
                <local:AssetControl Grid.Column="1" Grid.ColumnSpan="2" TargetAssetType="Font" SelectedAsset="{Binding Asset, Mode=TwoWay}" Width="350" HorizontalAlignment="Left" />
                <TextBlock Grid.Row="1" Grid.Column="1" Text="Font Size:" Visibility="{Binding FontControlVisibility}" VerticalAlignment="Center" Margin="10,0,0,0" />
                <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding Size}" MinWidth="40" MaxWidth="100" VerticalAlignment="Center" HorizontalAlignment="Left" Visibility="{Binding FontControlVisibility}"/>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>
    <TabControl>
        <TabItem Header="Information">

            <ScrollViewer Grid.Column="1" Grid.RowSpan="4"  VerticalScrollBarVisibility="Auto">
                <StackPanel Style="{StaticResource OctideInputPanel}">

                    <TextBlock Text="Name"/>
                    <TextBox Text="{Binding Name, Mode=TwoWay}"/>

                    <TextBlock Text="Description"/>
                    <TextBox Text="{Binding Description, Mode=TwoWay}" MaxHeight="150" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" AcceptsReturn="True"/>

                    <TextBlock Text="Game URL"/>
                    <TextBox Text="{Binding GameUrl, Mode=TwoWay}"/>

                    <TextBlock Text="Icon URL"/>
                    <TextBox Text="{Binding IconUrl, Mode=TwoWay}"/>

                    <TextBlock Text="Marker Size" />
                    <DockPanel>
                        <TextBox Text="{Binding MarkerSize, Mode=TwoWay}" Width="60"/>
                        <Slider Value="{Binding MarkerSize, Mode=TwoWay}" Minimum="0" Maximum="200"/>
                    </DockPanel>

                    <TextBlock Text="Version"/>
                    <TextBox Text="{Binding Version, Mode=TwoWay}"/>

                    <TextBlock Text="Authors"/>
                    <TextBox Text="{Binding Authors, Mode=TwoWay}"/>

                    <TextBlock Text="Tags"/>
                    <TextBox Text="{Binding Tags, Mode=TwoWay}"/>

                    <TextBlock Text="Use Two Sided Table"/>
                    <metro:ToggleSwitch IsChecked="{Binding UseTwoSidedTable, Mode=TwoWay}" Width="Auto" HorizontalAlignment="Left"/>

                    <TextBlock Text="Note Background Color"/>
                    <xctk:ColorPicker SelectedColor="{Binding NoteBackgroundColor, Mode=TwoWay}" ShowDropDownButton="False" Width="100" HorizontalAlignment="Left"/>

                    <TextBlock Text="Note Foreground Color"/>
                    <xctk:ColorPicker SelectedColor="{Binding NoteForegroundColor, Mode=TwoWay}" ShowDropDownButton="False" Width="100" HorizontalAlignment="Left"/>

                </StackPanel>
            </ScrollViewer>
        </TabItem>
        <TabItem Header="Fonts">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Style="{StaticResource OctideInputPanel}" Margin="0,0,50,0" >
                    <TextBlock Text="Deck Editor Font" />
                    <ContentControl ContentTemplate="{StaticResource FontControl}" Content="{Binding DeckEditorFont}" />

                    <TextBlock Text="Notes Font" />
                    <ContentControl ContentTemplate="{StaticResource FontControl}" Content="{Binding NotesFont}" />

                    <Grid Margin="50,5,5,5" Background="BlanchedAlmond" Height="120" Width="170" 
                          Visibility="{Binding NotesFont.FontControlVisibility}" HorizontalAlignment="Left" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="24" />
                            <RowDefinition Height="100" />
                        </Grid.RowDefinitions>
                        <Border Background="#11000000" />
                        <Border Margin="5" Grid.Row="1" >
                            <TextBox Background="Transparent" Foreground="Black" BorderBrush="Transparent" VerticalScrollBarVisibility="Auto"
                                     TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True"
                                     VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"
                                     FontFamily="{Binding NotesFont.FontAsset}" FontSize="{Binding NotesFont.Size}"/>
                        </Border>
                    </Grid>
                </StackPanel>
                <StackPanel Style="{StaticResource OctideInputPanel}" Grid.Column="1" >
                    <TextBlock Text="Chat Font" />
                    <ContentControl ContentTemplate="{StaticResource FontControl}" Content="{Binding ChatFont}" />

                    <Border CornerRadius="2" Margin="50,5,5,5" HorizontalAlignment="Left" Height="200" Width="280" BorderBrush="{StaticResource ControlBorderBrush}" 
                            BorderThickness="1" Background="{StaticResource ControlFillBrush}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollViewer Style="{StaticResource NuclearScrollViewer}"  VerticalScrollBarVisibility="Visible" Background="Transparent">
                                <TextBlock Text="{Binding Chat }" Margin="0" Padding="0" Background="Transparent" TextWrapping="Wrap"
                                                   FontFamily="{Binding ChatFont.FontAsset}"
                                     FontSize="{Binding ChatFont.Size}" Foreground="Black"  />
                            </ScrollViewer>

                            <Rectangle Fill="White" Grid.Row="1" Height="1" />

                            <xctk:WatermarkTextBox Foreground="WhiteSmoke" Background="Transparent" Grid.Row="2" Watermark="Type here to chat (Ctrl+T)" Text="{Binding ChatInputText, UpdateSourceTrigger=PropertyChanged}" >
                                <xctk:WatermarkTextBox.InputBindings>
                                    <KeyBinding Command="{Binding EnterChatCommand}" Key="Enter" />
                                    <KeyBinding Command="{Binding CancelChatCommand}" Key="Esc" />
                                </xctk:WatermarkTextBox.InputBindings>
                            </xctk:WatermarkTextBox>
                        </Grid>
                    </Border>


                    <TextBlock Text="Context Menu Font" />
                    <ContentControl ContentTemplate="{StaticResource FontControl}" Content="{Binding ContextFont}" />

                    <Border Width="200" Height="300" Style="{StaticResource OctgnActionMenuTemplate}">
                        <Menu ItemsSource="{Binding Menu}"  />
                    </Border>
                </StackPanel>
            </Grid>
        </TabItem>
        <TabItem Header="Deck Sections">
            <TabItem.Resources>
                <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource IdeBaseItemStyle}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}" >
                                <Border Background="{TemplateBinding Background}">
                                    <Grid Margin="4">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="Name" TextAlignment="Right"/>
                                        <TextBox Grid.Column="1" Text="{Binding Name}" />
                                        <TextBlock Grid.Row="1" Text="Load into:" />
                                        <ComboBox FontSize="10" Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Groups}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedGroup}" />
                                    </Grid>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabItem.Resources>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Button Content="Add Deck Section" Margin="5" Command="{Binding AddCommand}" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasPiles}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="ToolTip" Value="Add a Shared Group to enable this button." />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <ListBox Grid.Row="1" Style="{StaticResource IdeBaseItemContainerStyle}" ItemContainerStyle="{StaticResource {x:Type ListBoxItem} }"
                     ItemsSource="{Binding Items}" gong:DragDrop.DropHandler="{Binding DeckSectionDropHandler}" SelectedValue="{Binding Items.SelectedItem}" >
                    <ListBox.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding Items.SelectedItem.RemoveCommand}" />
                    </ListBox.InputBindings>
                </ListBox>

                <Button Grid.Column="1" Content="Add Shared Deck Section" Margin="5" Command="{Binding AddGlobalCommand}" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasGlobalPiles}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="ToolTip" Value="Add a Shared Group to enable this button." />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <ListBox Grid.Column="1" Grid.Row="1"  Style="{StaticResource IdeBaseItemContainerStyle}" ItemContainerStyle="{StaticResource {x:Type ListBoxItem} }"
                     ItemsSource="{Binding GlobalItems}" SelectedValue="{Binding GlobalItems.SelectedItem}"  gong:DragDrop.DropHandler="{Binding DeckSectionDropHandler}" 
                         ScrollViewer.VerticalScrollBarVisibility="Visible">
                    <ListBox.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding GlobalItems.SelectedItem.RemoveCommand}" />
                    </ListBox.InputBindings>
                </ListBox>

            </Grid>

        </TabItem>
    </TabControl>
</UserControl>
